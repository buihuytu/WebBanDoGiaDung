@model WebsiteBanDoGiaDung.Models.MTopic

@{
    ViewBag.Title = "Thêm chủ đề bài viết";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@Html.AntiForgeryToken()
<section class="content">
    <div class="container-fluid">
        <!--Content-->
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-8">
                        @Html.Partial("_MessageAlert")
                        <h5 class="text-csm">@ViewBag.Title <span style="display:none" id="session">@HttpContext.Current.Session["Admin_ID"].ToString()</span></h5>
                    </div>
                    <div class="col-4">
                        <div class="float-right pt-1">
                            <button type="submit" class="btn btn-primary btn-sm" onclick="addClick();">
                                <i class="fas fa-save"></i>&nbsp; Save
                            </button>
                            <button type="button" class="btn btn-danger btn-sm">
                                <a href="~/Admin/Topic/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">

                <div class="row">
                    <div class="col-md-9">
                        <div class="form-horizontal">


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <label class="control-label col-md-2">Tên chủ đề</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Từ khóa SEO</label>
                                @Html.TextAreaFor(model => model.MetaKey, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaKey, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Mô tả SEO</label>
                                @Html.TextAreaFor(model => model.MetaDesc, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaDesc, "", new { @class = "text-danger" })

                            </div>

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label col-md-10">Cấp cha</label>
                            @Html.DropDownListFor(model => model.ParentID, (SelectList)ViewBag.listTopic, "[Là cấp cha]", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-10">Thứ tự hiển thị</label>
                            @Html.DropDownListFor(model => model.Order, (SelectList)ViewBag.listOrder, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-10">Trạng thái</label>
                            @Html.DropDownListFor(model => model.Status, new[] { new SelectListItem { Value = "1", Text = "Hiển thị" }, new SelectListItem { Value = "2", Text = "Không hiển thị" } }, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    function addClick() {
        var parentId = $("#ParentID").val();
        if (parentId == "") {
            parentId = "0";
        }
        var topic = {
            "name": $("#Name").val(),
            "parentId": parentId,
            "order": $("#Order").val(),
            "metaKey": $("#MetaKey").val(),
            "metaDesc": $("#MetaDesc").val(),
            "status": $("#Status").val(),
            "createdBy": $("#session").text(),
            "updatedBy": $("#session").text()
        }

        var Url = "https://localhost:7005/api/Topics";

        $.ajax({
            url: Url,
            method: 'POST',
            contentType: 'application/json;charset=utf-8',
            dataType: "text",
            data: JSON.stringify(topic),
            success: function (response) {
                console.log(response);
                alert("Add Success!");
                // Notification.set_flash("Danh mục đã được thêm!", "success");
                window.location.replace("https://localhost:44357/Admin/Topic/Index");
            },
            error: function (errorMessage) {
                console.log(errorMessage);
                console.log(topic)
                // Notification.set_flash("Có lỗi xảy ra khi thêm danh mục!", "warning");
            }
        });
    }
</script>

