@model WebsiteBanDoGiaDung.Models.MCategory

@{
    ViewBag.Title = "Sửa Danh mục sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@Html.Partial("_MessageAlert")

@Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">@ViewBag.Title</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button class="btn btn-primary btn-sm" onclick="update();">
                                    <i class="fas fa-save"></i>&nbsp; Update
                                </button>
                                <button type="button" class="btn btn-danger btn-sm" id="exit">
                                    <a href="~/Admin/Category/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-horizontal">


                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)
                                @Html.HiddenFor(model => model.Created_at)
                                @Html.HiddenFor(model => model.Created_by)
                                <span style="display:none" id="session">@HttpContext.Current.Session["Admin_ID"].ToString()</span>
                                <div class="form-group">
                                    <label class="control-label col-md-2">Tên danh mục</label>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Từ khóa SEO</label>
                                    @Html.TextAreaFor(model => model.MetaKey, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaKey, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Mô tả SEO</label>
                                    @Html.TextAreaFor(model => model.MetaDesc, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaDesc, "", new { @class = "text-danger" })

                                </div>

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label col-md-10">Cấp cha</label>
                                @Html.DropDownListFor(model => model.ParentID, (SelectList)ViewBag.listCat, "[Là cấp cha]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Thứ tự hiển thị</label>
                                @Html.DropDownListFor(model => model.Orders, (SelectList)ViewBag.listOrder, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Orders, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trạng thái</label>
                                @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                                    {
                                    new SelectListItem {  Value = "1", Text = "Hiển thị" },
                                    new SelectListItem {  Value = "2", Text = "Không hiển thị" },
                                    },
                                    new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>  

<script type="text/javascript">
    function update() {
        var parentID = $("#ParentID").val();
        if (parentID == "") {
            parentID = "0"
        }
        var category = {
            id: $("#ID").val(),
            name: $("#Name").val(),
            parentId: parentID,
            orders: $("#Orders").val(),
            metaKey: $("#MetaKey").val(),
            metaDesc: $("#MetaDesc").val(),
            status: $("#Status").val(),
            updatedBy: $("#session").text()
        };

        var Url = "https://localhost:7005/api/Categories/id?ID=" + $("#ID").val();

        $.ajax({
            url: Url,
            method: 'PUT',
            contentType: 'application/json;charset=utf-8',
            dataType: 'text',
            data: JSON.stringify(category),
            success: function (response) {
                console.log(response);
                alert("Edit Successfully Slider Name: " + $("#Name").val());
//                window.location.replace("https://localhost:44357/Admin/Category/Index");
            },
            error: function (errorMessage) {
                console.log(errorMessage);
            }
        });
    }
    

</script>